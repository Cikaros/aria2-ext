// @bun
var h=Object.create;var{defineProperty:Y,getPrototypeOf:f,getOwnPropertyNames:v}=Object;var c=Object.prototype.hasOwnProperty;var l=(T,B,F)=>{F=T!=null?h(f(T)):{};const L=B||!T||!T.__esModule?Y(F,"default",{value:T,enumerable:!0}):F;for(let y of v(T))if(!c.call(L,y))Y(L,y,{get:()=>T[y],enumerable:!0});return L};var G=(T,B)=>()=>(B||T((B={exports:{}}).exports,B),B.exports);var _=G((s,Z)=>{Z.exports=function T(){this.promise=new Promise((B,F)=>{this.resolve=B,this.reject=F})}});var W=G((e,$)=>{$.exports=function T(B,F){return new Promise((L,y)=>{function U(){B.removeListener(F,V),B.removeListener("error",X)}function V(M){L(M),U()}function X(M){y(M),U()}B.addListener(F,V),B.addListener("error",X)})}});var j=G((T2,O)=>{O.exports=class T extends Error{constructor({message:B,code:F,data:L}){super(B);if(this.code=F,L)this.data=L;this.name=this.constructor.name}}});var A=G((B2,x)=>{var D=_(),w=W(),p=j(),n=import.meta.require("ws"),i=import.meta.require("node-fetch"),g=import.meta.require("events"),d=global.WebSocket||n,o=global.fetch?global.fetch.bind(global):i;class Q extends g{constructor(T){super();this.deferreds=Object.create(null),this.lastId=0,Object.assign(this,this.constructor.defaultOptions,T)}id(){return this.lastId++}url(T){return T+(this.secure?"s":"")+"://"+this.host+":"+this.port+this.path}websocket(T){return new Promise((B,F)=>{const L=(y)=>{if(y)F(y);else B()};if(this.socket.send(JSON.stringify(T),L),global.WebSocket&&this.socket instanceof global.WebSocket)L()})}async http(T){const B=await this.fetch(this.url("http"),{method:"POST",body:JSON.stringify(T),headers:{Accept:"application/json","Content-Type":"application/json"}});return B.json().then((F)=>this._onmessage(F)).catch((F)=>{this.emit("error",F)}),B}_buildMessage(T,B){if(typeof T!=="string")throw new TypeError(T+" is not a string");const F={method:T,"json-rpc":"2.0",id:this.id()};if(B)Object.assign(F,{params:B});return F}async batch(T){const B=[],F=T.map(([L,y])=>{return this._buildMessage(L,y)});return await this._send(F),F.map(({id:L})=>{const{promise:y}=this.deferreds[L]=new D;return y})}async call(T,B){const F=this._buildMessage(T,B);await this._send(F);const{promise:L}=this.deferreds[F.id]=new D;return L}async _send(T){this.emit("output",T);const{socket:B}=this;return B&&B.readyState===1?this.websocket(T):this.http(T)}_onresponse({id:T,error:B,result:F}){const L=this.deferreds[T];if(!L)return;if(B)L.reject(new p(B));else L.resolve(F);delete this.deferreds[T]}_onrequest({method:T,params:B}){return this.onrequest(T,B)}_onnotification({method:T,params:B}){this.emit(T,B)}_onmessage(T){if(this.emit("input",T),Array.isArray(T))for(let B of T)this._onobject(B);else this._onobject(T)}_onobject(T){if(T.method===void 0)this._onresponse(T);else if(T.id===void 0)this._onnotification(T);else this._onrequest(T)}async open(){const T=this.socket=new this.WebSocket(this.url("ws"));return T.onclose=(...B)=>{this.emit("close",...B)},T.onmessage=(B)=>{let F;try{F=JSON.parse(B.data)}catch(L){this.emit("error",L);return}this._onmessage(F)},T.onopen=(...B)=>{this.emit("open",...B)},T.onerror=(...B)=>{this.emit("error",...B)},w(this,"open")}async close(){const{socket:T}=this;return T.close(),w(this,"close")}}Q.defaultOptions={secure:!1,host:"localhost",port:80,secret:"",path:"/jsonrpc",fetch:o,WebSocket:d};x.exports=Q});var J=G((F2,u)=>{var H=function(T){if(!T.startsWith("system.")&&!T.startsWith("aria2."))T="aria2."+T;return T},I=function(T){return T.split("aria2.")[1]||T},b=A();class K extends b{addSecret(T){let B=this.secret?["token:"+this.secret]:[];if(Array.isArray(T))B=B.concat(T);return B}_onnotification(T){const{method:B,params:F}=T,L=I(B);if(L!==B)this.emit(L,F);return super._onnotification(T)}async call(T,...B){return super.call(H(T),this.addSecret(B))}async multicall(T){const B=[T.map(([F,...L])=>{return{methodName:H(F),params:this.addSecret(L)}})];return super.call("system.multicall",B)}async batch(T){return super.batch(T.map(([B,...F])=>[H(B),this.addSecret(F)]))}async listNotifications(){return(await this.call("system.listNotifications")).map((B)=>I(B))}async listMethods(){return(await this.call("system.listMethods")).map((B)=>I(B))}}Object.assign(K,{prefix:H,unprefix:I});K.defaultOptions=Object.assign({},b.defaultOptions,{secure:!1,host:"localhost",port:6800,secret:"",path:"/jsonrpc"});u.exports=K});var R=G((L2,N)=>{var m=J();N.exports=m});import C from"process";var S=l(R(),1);import*as q from"process";var t={SSE_URL:q.env.SSE_URL||"http://127.0.0.1:8844/stream",DB_URI:q.env.DB_URI||"./aria2-ext.db",BASE_URL:q.env.BASE_URL||"https://cikaros.top",ROOM_NAME:q.env.ROOM_NAME||"BOT\u6D88\u606F\u901A\u77E5",INVITE_REASON:q.env.INVITE_REASON||"BOT\u9080\u8BF7\u60A8\u52A0\u5165\u623F\u95F4\uFF0C\u5B9E\u65F6\u63A5\u6536\u6D88\u606F\uFF01",ONLINE_NOTICE:q.env.ONLINE_NOTICE||"Hello, Bot\u5DF2\u4E0A\u7EBF\uFF01",OFFLINE_NOTICE:q.env.OFFLINE_NOTICE||"Hello, Bot\u5373\u5C06\u4E0B\u7EBF\uFF01",DEVICE_ID:q.env.DEVICE_ID||"HAINCIWNO1",DISPLAY_NAME:q.env.DISPLAY_NAME||"Bot",ADMIN_ID:q.env.ADMIN_ID||"@cikaros:cikaros.top",USER_ID:q.env.USER_ID||"@bot:cikaros.top",PASSWORD:q.env.PASSWORD||"",INTERVAL_TIMEOUT:q.env.INTERVAL_TIMEOUT||60000,RSS_TIMEOUT:q.env.RSS_TIMEOUT||5000,ARIA2_HOST:q.env.ARIA2_HOST||"localhost",ARIA2_PORT:q.env.ARIA2_PORT||6800,ARIA2_SECURE:q.env.ARIA2_SECURE||!1,ARIA2_SECRET:q.env.ARIA2_SECRET||"P3TERX",ARIA2_PATH:q.env.ARIA2_PATH||"/jsonrpc"},z=t;class k{aria2;constructor(){this.aria2=new S.default([{host:z.ARIA2_HOST,port:z.ARIA2_PORT,secure:z.ARIA2_SECURE,secret:z.ARIA2_SECRET,path:z.ARIA2_PATH}])}async start(){await this.aria2.open()}async stop(){await this.aria2.close()}async getVersion(){return await this.aria2.call("getVersion")}async addUri(T,...B){return await this.aria2.call("addUri",B,{dir:T})}async remove(...T){return await this.aria2.call("remove",T)}async pause(...T){return await this.aria2.call("pause",T)}async pauseAll(){return await this.aria2.call("pauseAll")}async unpause(...T){return await this.aria2.call("unpause",T)}async unpauseAll(){return await this.aria2.call("unpauseAll")}async getGlobalOption(){return await this.aria2.call("getGlobalOption")}}var P=new k;await P.start();var E=P;console.log(z);var a=await E.getGlobalOption();console.info(a);C.on("SIGTERM",async()=>{C.exit(0)});
